<project name="DeepaMehta" default="deploy" basedir=".">

	<description>
		DeepaMehta build file
	</description>

	<import file="config.xml"/>

	<!-- Install -->

	<target name="install">
		<echo message="--- DeepaMehta Installation ---"/>
		<echo message="You are about to create a database '${db.name}' and an user '${db.userid}' (password '${db.password}')."/>
		<echo message="You will be asked for the MySQL root user password."/>
		<echo message="If you want change these settings, type 'n' and edit config.xml (section 'Database')"/>
		<echo message="or use command line options -Ddb.name=... -Ddb.userid=... -Ddb.password=..."/>
		<input message="Continue? " validargs="y,n" addproperty="do.install"/>
		<condition property="do.abort">
			<equals arg1="${do.install}" arg2="n"/>
		</condition>
		<fail if="do.abort" message="==> Installation aborted by user -- revisit with 'ant [options] install'"/>
		<antcall target="createdb"/>
		<antcall target="createtables"/>
		<antcall target="initdb"/>
		<!-- example applications -->
		<antcall target="installmovies"/>
		<antcall target="installweb"/>
	</target>

	<target name="installmovies">
		<ant antfile="${examples}/movies/build.xml" dir="${examples}/movies" target="install"/>
	</target>

	<target name="installweb">
		<echo message="You are about to install the example web applications to '${web.deploy.dir}'."/>
		<echo message="The directory for the servlet engines shared libraries is set to'${web.lib.dir}'."/>
		<echo message="If you want change these settings, type 'n' and edit config.xml (section 'Servlet Engine')"/>
		<echo message="or use command line options -Dweb.deploy.dir=... -Dweb.lib.dir=..."/>
		<input message="Continue? " validargs="y,n" addproperty="do.installweb"/>
		<condition property="do.abortweb">
			<equals arg1="${do.installweb}" arg2="n"/>
		</condition>
		<fail if="do.abortweb" message="==> Installation aborted by user -- revisit with 'ant [options] installweb'"/>
		<!-- copy shared libraries -->
		<antcall target="deploylibs"/>
        <copy file="${libpath}/mysql-3.1.7.jar" todir="${web.lib.dir}"/>
        <copy file="${libpath}/googleapi.jar" todir="${web.lib.dir}"/>
        <copy file="${libpath}/commons-fileupload-1.0.jar" todir="${web.lib.dir}"/>
		<!-- deploy web applications -->
		<ant antfile="${examples}/dm-browser/build.xml" dir="${examples}/dm-browser"/>
		<ant antfile="${examples}/dm-search/build.xml" dir="${examples}/dm-search"/>
		<ant antfile="${examples}/messageboard/build.xml" dir="${examples}/messageboard"/>
		<ant antfile="${examples}/musicforum/build.xml" dir="${examples}/musicforum"/>
		<ant antfile="${examples}/kompetenzstern/build.xml" dir="${examples}/kompetenzstern"/>
	</target>

	<target name="deploy" depends="build">
		<antcall target="deploylibs"/>
	</target>

	<target name="deploylibs">
        <copy file="${server}/DeepaMehtaService.jar" todir="${web.lib.dir}"/>
        <copy file="${server}/DeepaMehtaTopics.jar" todir="${web.lib.dir}"/>
	</target>

	<target name="createdb">
		<input message="Enter MySQL root user password: " addproperty="db.rootpw"/>
		<sql driver="${db.driver}" url="${db.sysurl}" userid="${db.sysuser}" password="${db.rootpw}" classpathref="javalibs">
			CREATE DATABASE ${db.name};
			GRANT ALL PRIVILEGES ON ${db.name}.* TO ${db.userid}@localhost IDENTIFIED BY '${db.password}' WITH GRANT OPTION;
			GRANT ALL PRIVILEGES ON ${db.name}.* TO ${db.userid}@"%"       IDENTIFIED BY '${db.password}' WITH GRANT OPTION;
		</sql>
	</target>

	<target name="dropdb">
		<echo message="You are about to drop the DeepaMehta database '${db.name}' and the user '${db.userid}'."/>
		<echo message="You will be asked for the MySQL root user password."/>
		<echo message="If you want drop another database and user, type 'n' and edit config.xml (section 'Database')"/>
		<echo message="or use command line options -Ddb.name=... -Ddb.userid=..."/>
		<input message="Continue? " validargs="y,n" addproperty="do.drop"/>
		<condition property="do.abort">
			<equals arg1="${do.drop}" arg2="n"/>
		</condition>
		<fail if="do.abort" message="==> Aborted by user -- revisit with 'ant [options] dropdb'"/>
		<input message="Enter MySQL root user password: " addproperty="db.rootpw"/>
		<sql driver="${db.driver}" url="${db.sysurl}" userid="${db.sysuser}" password="${db.rootpw}" classpathref="javalibs">
			DROP DATABASE ${db.name};
			DELETE FROM user where User='${db.userid}';
			DELETE FROM db where Db='${db.name}';
		</sql>
	</target>

	<target name="createtables">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.userid}" password="${db.password}" src="${db.tables}">
			<classpath refid="javalibs"/>
		</sql>
	</target>

	<target name="initdb">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.userid}" password="${db.password}" classpathref="javalibs">
			<fileset dir="${db}">
				<include name="cm.sql"/>
				<include name="email.sql"/>
				<include name="auth.sql"/>
				<include name="webcrawler.sql"/>
				<include name="whois.sql"/>
			</fileset>
			<fileset dir="${examples}">
				<include name="movies/movies.sql"/>
				<include name="music/music.sql"/>
				<include name="artfacts/artfacts.sql"/>
				<include name="kompetenzstern/kompetenzstern.sql"/>
				<include name="kompetenzstern/businesscheck.sql"/>
			</fileset>
			<fileset dir="${db}/patches">
				<include name="names.sql"/>
				<include name="help.sql"/>
			</fileset>
		</sql>
	</target>

	<target name="droptables">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.userid}" password="${db.password}" src="${db}/db_drop.sql">
			<classpath refid="javalibs"/>
		</sql>
	</target>

	<target name="reset">
		<echo message="You are about to reset the database ${db.name} (user '${db.userid}', password '${db.password}')."/>
		<echo message="If you want reset another database, type 'n' and edit config.xml (section 'Database')"/>
		<echo message="or use command line options -Ddb.name=... -Ddb.userid=... -Ddb.password=..."/>
		<input message="Continue? " validargs="y,n" addproperty="do.reset"/>
		<condition property="do.abort">
			<equals arg1="${do.reset}" arg2="n"/>
		</condition>
		<fail if="do.abort" message="==> Aborted by user -- revisit with 'ant [options] reset'"/>
		<antcall target="droptables"/>
		<antcall target="createtables"/>
		<antcall target="initdb"/>
	</target>

	<target name="patchdb">
		<echo message="You are about to apply the patch ${patch} the database ${db.name} (user '${db.userid}', password '${db.password}')."/>
		<echo message="If you want patch another database, type 'n' and edit config.xml (section 'Database')"/>
		<echo message="or use command line options -Ddb.name=... -Ddb.userid=... -Ddb.password=... -Dpatch=..."/>
		<input message="Continue? " validargs="y,n" addproperty="do.patch"/>
		<condition property="do.abort">
			<equals arg1="${do.patch}" arg2="n"/>
		</condition>
		<fail if="do.abort" message="==> Aborted by user -- revisit with 'ant [options] patchdb'"/>
		<sql driver="${db.driver}" url="${db.url}" userid="${db.userid}" password="${db.password}" src="${patch}">
			<classpath refid="javalibs"/>
		</sql>
	</target>

	<!-- Run -->

	<target name="dm" description="runs the monolithic DeepaMehta application, default instance">
		<java classname="de.deepamehta.service.DeepaMehta" dir="${client}" fork="true">
			<classpath>
				<pathelement location="${client}/DeepaMehta.jar"/>
				<path refid="dmapps"/> 
				<path refid="javalibs"/> 
			</classpath>
			<sysproperty key="java.endorsed.dirs" path="${endorsedpath}"/>
			<arg value="${dm.instance}"/>
        </java>
	</target>

	<target name="dms" description="runs the DeepaMehta server">
		<java classname="de.deepamehta.service.DeepaMehtaServer" dir="${client}" fork="true">
			<classpath>
				<pathelement location="${server}/DeepaMehtaService.jar"/>
				<pathelement location="${server}/DeepaMehtaTopics.jar"/>
				<path refid="dmapps"/> 
				<path refid="javalibs"/> 
			</classpath>
			<sysproperty key="java.endorsed.dirs" path="${endorsedpath}"/>
			<arg value="${dm.instance}"/>
        </java>
	</target>

	<target name="dmc" description="runs the DeepaMehta client, connects to local server">
		<java classname="de.deepamehta.client.DeepaMehtaClient" dir="${client}" fork="true">
			<classpath>
				<pathelement location="${client}/DeepaMehtaClient.jar"/>
			</classpath>
			<arg value="${dm.host}:${dm.port}"/>
        </java>
	</target>

	<!-- Build -->

	<target name="init" description="create build directory">
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init" description="compile sources">
		<javac srcdir="${sources}" destdir="${build}" debug="on" listfiles="yes" encoding="MacRoman">
			<classpath refid="javalibs"/>
		</javac>
	</target>

	<target name="build" depends="compile" description="build jar files">
		<!-- ensure target path exists -->
		<mkdir dir="${bin}"/>
		<!-- monolith -->
		<jar jarfile="${bin}/DeepaMehta.jar" basedir="${build}">
			<include name="de/deepamehta/*.class"/>
			<include name="de/deepamehta/*.properties"/>
			<include name="de/deepamehta/client/*.class"/>
			<include name="de/deepamehta/service/*.class"/>
			<include name="de/deepamehta/topics/**/*.class"/>
			<include name="de/deepamehta/assocs/**/*.class"/>
			<exclude name="de/deepamehta/client/DeepaMehtaClient.class"/>
			<exclude name="de/deepamehta/client/SocketService.class"/>
			<exclude name="de/deepamehta/client/InteractionConnection.class"/>
			<exclude name="de/deepamehta/client/MessagingConnection.class"/>
			<exclude name="de/deepamehta/client/TypeConnection.class"/>
			<exclude name="de/deepamehta/client/FileserverConnection.class"/>
			<exclude name="de/deepamehta/service/InteractionConnection.class"/>
			<exclude name="de/deepamehta/service/MessagingConnection.class"/>
			<exclude name="de/deepamehta/service/TypeConnection.class"/>
			<exclude name="de/deepamehta/service/FileserverConnection.class"/>
			<exclude name="de/deepamehta/service/ExternalConnection.class"/>
			<exclude name="de/deepamehta/service/DeepaMehtaServer.class"/>
			<exclude name="de/deepamehta/service/DeepaMehtaServer$Connection.class"/>
			<include name="de/deepamehta/environment/**/*.class"/>
			<include name="de/deepamehta/environment/**/*.xml"/>
			<include name="de/deepamehta/environment/**/*.xsd"/>
			<manifest>
				<attribute name="Main-Class" value="de.deepamehta.service.DeepaMehta"/>
				<attribute name="Class-Path" value="${jarclasspath-srv} DeepaMehtaTopics.jar"/>
			</manifest>
		</jar>
		<!-- client --> 
		<jar jarfile="${bin}/DeepaMehtaClient.jar" basedir="${build}">
			<include name="de/deepamehta/*.class"/>
			<include name="de/deepamehta/client/*.class"/>
			<manifest>
				<attribute name="Main-Class" value="de.deepamehta.client.DeepaMehtaClient"/>
				<!-- <attribute name="Class-Path" value="${jarclasspath}"/> -->
			</manifest>
		</jar>
		<!-- server -->
		<jar jarfile="${bin}/DeepaMehtaService.jar" basedir="${build}">
			<include name="de/deepamehta/*.class"/>
			<include name="de/deepamehta/service/**/*.class"/>
			<manifest>
				<attribute name="Main-Class" value="de.deepamehta.service.DeepaMehtaServer"/>
				<attribute name="Class-Path" value="${jarclasspath-srv} DeepaMehtaTopics.jar"/>
			</manifest>
		</jar>
		<!-- topics -->
		<jar jarfile="${bin}/DeepaMehtaTopics.jar" basedir="${build}">
			<include name="de/deepamehta/topics/**/*.class"/>
			<include name="de/deepamehta/assocs/**/*.class"/>
		</jar>
		<!-- launch pad -->
		<jar jarfile="${bin}/DeepaMehtaLaunchPad.jar" basedir="${build}">
			<include name="de/deepamehta/launchpad/**/*.class"/>
			<include name="de/deepamehta/launchpad/**/*.properties"/>
			<include name="de/deepamehta/launchpad/**/*.xml"/>
			<include name="de/deepamehta/launchpad/**/*.xsd"/>
			<include name="de/deepamehta/environment/**/*.class"/>
			<include name="de/deepamehta/environment/**/*.xml"/>
			<include name="de/deepamehta/environment/**/*.xsd"/>
			<include name="de/deepamehta/service/*.class"/>
			<include name="de/deepamehta/*.class"/>
			<include name="de/deepamehta/*.properties"/>
			<manifest>
				<attribute name="Main-Class" value="de.deepamehta.launchpad.LaunchPad"/>
				<attribute name="Class-Path" value="${jarclasspath-lp}"/>
			</manifest>
		</jar>
		<!-- data file for instance bootstrapping -->
		<zip destfile="${bin}/instance-data.zip" basedir="develop/data"/>
	</target>

	<target name="sign" depends="build" description="sign client">
		<signjar jar="${client}/DeepaMehtaClient.jar" alias="tomcat"
			storepass="kspw01" keypass="kspw01" signedjar="${client}/sDeepaMehtaClient.jar"/>
	</target>

	<target name="release" depends="sign">
		<echo message="You are about to build the release file '${build.name}'."/>
		<echo message="If you want use another name, type 'n' and edit config.xml (section 'Build Support')"/>
		<echo message="or use a command line option -Dbuild.name=..."/>
		<input message="Continue? " validargs="y,n" addproperty="do.release"/>
		<condition property="do.abort">
			<equals arg1="${do.release}" arg2="n"/>
		</condition>
		<fail if="do.abort" message="==> Release building aborted by user -- revisit with 'ant release [option]'"/>
		<zip destfile="${build.archive.dir}/${build.name}" basedir=".">
			<exclude name="**/build/"/>
			<exclude name="develop/bin/"/>
			<exclude name="docs/"/>
			<exclude name="install/client/documents/*"/>
			<exclude name="install/client/webpages/**"/>
			<exclude name="install/client/icons/ka-*"/>
			<exclude name="install/client/icons/jah-*"/>
			<exclude name="install/client/icons/108_*"/>
			<exclude name="install/client/icons/Sacred*"/>
			<exclude name="install/client/images/javaxml/"/>
			<exclude name="install/client/images/HCI/"/>
			<exclude name="install/client/images/iso-9001.jpeg"/>
			<exclude name="install/client/images/marlene-dietrich-11.png"/>
			<exclude name="install/client/images/axel-springer-40.png"/>
			<exclude name="install/client/images/Driton*"/>
			<exclude name="install/client/images/comparison.png"/>
			<exclude name="install/client/images/jah-*"/>
			<exclude name="install/client/images/DeepaMobil.png"/>
			<exclude name="install/client/images/acro.png"/>
			<exclude name="install/client/images/anika-7.gif"/>
			<exclude name="install/client/images/stats/*"/>
			<exclude name="install/client/images/stats"/>
			<exclude name="install/client/stylesheets/browser/*"/>
			<exclude name="install/client/stylesheets/browser"/>
			<exclude name="install/client/stylesheets/vergleich*"/>
			<exclude name="install/client/backgrounds/axel-springer-40.png"/>
			<exclude name="install/client/backgrounds/kartepur.jpg"/>
			<exclude name="install/client/backgrounds/ks-*"/>
			<exclude name="install/client/backgrounds/comparison.png"/>
			<exclude name="install/client/backgrounds/daily*"/>
			<exclude name="install/client/backgrounds/Sacred*"/>
			<exclude name="**/.FBC*"/>
			<exclude name="**/.xvpics/"/>
		</zip>
	</target>

	<target name="apidocs" description="generates the API documentation">
		<javadoc 
		   destdir="doc/api"
		   stylesheetfile="doc/stylesheet.css"
		   package="true"
		   windowtitle="DeepaMehta -- API Documentation">
			<fileset dir="develop/src">
			</fileset>		
		</javadoc>
		<!--
        <copy file="docs/overview-frame.html" todir="docs/apidocs" overwrite="true"/>
        <copy file="docs/overview-summary.html" todir="docs/apidocs" overwrite="true"/>
        <copy file="docs/apidocs-index.html" tofile="docs/apidocs/index.html" overwrite="true"/>
		-->
	</target>

	<target name="cleanup" description="remove build directory">
		<delete dir="${build}"/>
	</target>

	<!-- Fix -->

	<target name="fixdb" depends="build" description="fixes invalid HTML">
		<java classname="de.deepamehta.service.DBFix" dir="${client}" fork="true">
			<classpath>
				<pathelement location="${server}/DeepaMehtaService.jar"/>
				<path refid="javalibs"/> 
			</classpath>
			<arg value="${dm.instance}"/>
        </java>
	</target>

</project>
