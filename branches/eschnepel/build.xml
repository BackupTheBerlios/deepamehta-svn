<project name="DeepaMehta" default="dm" basedir=".">

	<description>
		DeepaMehta build file
	</description>

	<import file="config.xml" />

	<import file="${db-specific}/${db.create-db}" />
	<import file="${db-specific}/${db.drop-db}" />

	<import file="build-development.xml" optional="true"/>
	
	<path id="dmapps">
		<pathelement location="${examples}/movies/MoviesTopics.jar" />
		<!-- configure this -->
		<pathelement location="${examples}/messageboard/messageboard.jar" />
		<!-- configure this -->
		<pathelement location="${examples}/kompetenzstern/kompetenzstern.jar" />
		<!-- configure this -->
		<pathelement location="${appspath}/Kiez-Atlas/kiezatlas.jar" />
		<!-- configure this -->
		<pathelement location="${appspath}/TeenKom/teenkom.jar" />
		<!-- configure this -->
		<pathelement location="${appspath}/OLAP/olap.jar" />
		<!-- configure this -->
		<pathelement location="${appspath}/Importer/importer.jar" />
		<!-- configure this -->
		<pathelement location="${appspath}/DeepaMehta Coordination/coordination-platform.jar" />
		<!-- configure this -->
	</path>

	<!-- Install -->

	<target name="preinstall">
		<echo message="--- DeepaMehta Installation ---" />
		<echo message="You are about to create a database '${db.name}' and an user '${db.user}' (password '${db.password}')." />
		<echo message="You will be asked for the MySQL root user password." />
		<echo message="If you want change these settings, type 'n' and edit config.xml (section 'Database')" />
		<echo message="or use command line options -Ddb.name=... -Ddb.user=... -Ddb.password=..." />
		<input message="Continue? " validargs="y,n" addproperty="do.install" />
		<condition property="do.abort">
			<equals arg1="${do.install}" arg2="n" />
		</condition>
		<fail if="do.abort" message="==> Installation aborted by user -- revisit with 'ant [options] install'" />
	</target>
	
	<target name="install" depends="preinstall" description="initialises the database">
		<antcall target="createdb" />
		<antcall target="createtables" />
		<antcall target="initdb" />
		<!-- example applications -->
		<antcall target="installmovies" />
		
		<!-- this should be a seperate call to ant-->
		
		<!--antcall target="installweb" /-->
	</target>

	<!-- Movies -->
	<target name="dropmovies">
		<condition property="withsyspass" value="true">
			<isset property="db.syspass" />
		</condition>
		<ant antfile="build.xml" dir="${examples}/movies" target="dropmoviesdb" inheritall="false" inheritrefs="false">
			<property name="syspass" value="${db.syspass}" />
			<property name="withsyspass" value="${withsyspass}" />
		</ant>
	</target>
	<target name="installmovies">
		<condition property="withsyspass" value="true">
			<isset property="db.syspass" />
		</condition>
		<ant antfile="build.xml" dir="${examples}/movies" target="install" inheritall="false" inheritrefs="false">
			<property name="syspass" value="${db.syspass}" />
			<property name="withsyspass" value="${withsyspass}" />
		</ant>
	</target>

	<!-- Web-related tasks -->
	<target name="installweb-ask">
		<echo message="You are about to install the web applications to '${web.deploy.dir}'." />
		<echo message="The directory for the servlet engines shared libraries is set to '${web.lib.dir}'." />
		<echo message="If you want change these settings, type 'n' and edit config.xml (section 'Servlet Engine')" />
		<echo message="or use command line options -Dweb.deploy.dir=... -Dweb.lib.dir=..." />
		<input message="Continue? " validargs="y,n" addproperty="do.installweb" />
		<condition property="do.abortweb">
			<equals arg1="${do.installweb}" arg2="n" />
		</condition>
	</target>
	<target name="installweb-if" if="do.abortweb" depends="installweb-ask">
		<echo message="==> Installation aborted by user -- revisit with 'ant [options] installweb'" />
	</target>
	<target name="installweb-unless" unless="do.abortweb" depends="installweb-ask">
		<!-- copy shared libraries -->
		<antcall target="deploylibs" />
		<copy todir="${web.lib.dir}" >
			<fileset dir="${dm.base-dir}">
				<include name="${db.libs}" />
			</fileset>
		</copy>
		<copy file="${libpath}/googleapi.jar" todir="${web.lib.dir}" />
		<copy file="${libpath}/commons-fileupload-1.0.jar" todir="${web.lib.dir}" />
		<!-- deploy web applications -->
		<ant antfile="${examples}/dm-browser/build.xml" dir="${examples}/dm-browser" target="deploy" />
		<ant antfile="${examples}/dm-search/build.xml" dir="${examples}/dm-search" target="deploy" />
		<ant antfile="${examples}/messageboard/build.xml" dir="${examples}/messageboard" target="deploy" />
		<ant antfile="${examples}/musicforum/build.xml" dir="${examples}/musicforum" target="deploy" />
		<ant antfile="${examples}/kompetenzstern/build.xml" dir="${examples}/kompetenzstern" target="deploy" />
	</target>
	<target name="installweb" depends="installweb-if,installweb-unless" />

	<target name="deploy" depends="build,installweb-ask">
		<antcall target="deploylibs" />
	</target>

	<target name="deploylibs" unless="do.abortweb">
		<copy file="${server}/DeepaMehtaService.jar" todir="${web.lib.dir}" />
		<copy file="${server}/DeepaMehtaTopics.jar" todir="${web.lib.dir}" />
	</target>

	<!-- The target createdb has been "outsourced" to ${db.create-db}-->
	<!-- The target dropdb has been "outsourced" to ${db.drop-db}-->

	<target name="createtables">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.user}" password="${db.password}" classpathref="javalibs" autocommit="${db.autocommit}">
			<fileset dir="${db-specific}">
				<include name="${db.tables}" />
			</fileset>
			<fileset dir="${db-specific}">
				<include name="${db.close-session}" />
			</fileset>
		</sql>
		<antcall target="optimize" />
	</target>

	<target name="optimize">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.user}" password="${db.password}" classpathref="javalibs" autocommit="${db.autocommit}">
			<fileset dir="${db-specific}">
				<include name="${db.optimize}" />
			</fileset>
			<fileset dir="${db-specific}">
				<include name="${db.close-session}" />
			</fileset>
		</sql>
	</target>

	<target name="initdb">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.user}" password="${db.password}" classpathref="javalibs" autocommit="${db.autocommit}">
			<fileset dir="${db}">
				<include name="cm.sql" />
				<include name="email.sql" />
				<include name="auth.sql" />
				<include name="webcrawler.sql" />
				<include name="whois.sql" />
			</fileset>
			<fileset dir="${db-specific}">
				<include name="${db.close-session}" />
			</fileset>
		</sql>
		<sql driver="${db.driver}" url="${db.url}" userid="${db.user}" password="${db.password}" classpathref="javalibs" autocommit="${db.autocommit}">
			<fileset dir="${examples}">
				<include name="movies/db/dmdb-movies.sql" />
				<include name="movies/db/dmdb-movies-${dm.instance}.sql" />
				<include name="musicforum/music.sql" />
				<include name="kompetenzstern/kompetenzstern.sql" />
				<include name="kompetenzstern/businesscheck.sql" />
			</fileset>
			<fileset dir="${db-specific}">
				<include name="${db.close-session}" />
			</fileset>
		</sql>
		<sql driver="${db.driver}" url="${db.url}" userid="${db.user}" password="${db.password}" classpathref="javalibs" autocommit="${db.autocommit}">
			<fileset dir="${db}/patches">
				<include name="names.sql" />
				<include name="help.sql" />
			</fileset>
			<fileset dir="${db-specific}">
				<include name="${db.close-session}" />
			</fileset>
		</sql>
		<antcall target="optimize" />
	</target>

	<target name="droptables">
		<sql driver="${db.driver}" url="${db.url}" userid="${db.user}" password="${db.password}" classpathref="javalibs" autocommit="${db.autocommit}">
			<fileset dir="${db-specific}">
				<include name="${db.drop-tables}" />
			</fileset>
			<fileset dir="${db-specific}">
				<include name="${db.close-session}" />
			</fileset>
		</sql>
	</target>

	<target name="reset">
		<echo message="You are about to reset the database ${db.name} (user '${db.user}', password '${db.password}')." />
		<echo message="If you want reset another database, type 'n' and edit config.xml (section 'Database')" />
		<echo message="or use command line options -Ddb.name=... -Ddb.user=... -Ddb.password=..." />
		<input message="Continue? " validargs="y,n" addproperty="do.reset" />
		<condition property="do.abort">
			<equals arg1="${do.reset}" arg2="n" />
		</condition>
		<fail if="do.abort" message="==> Aborted by user -- revisit with 'ant [options] reset'" />
		<antcall target="droptables" />
		<antcall target="createtables" />
		<antcall target="initdb" />
	</target>

	<target name="patchdb">
		<echo message="You are about to apply the patch ${patch} the database ${db.name} (user '${db.user}', password '${db.password}')." />
		<echo message="If you want patch another database, type 'n' and edit config.xml (section 'Database')" />
		<echo message="or use command line options -Ddb.name=... -Ddb.user=... -Ddb.password=... -Dpatch=..." />
		<input message="Continue? " validargs="y,n" addproperty="do.patch" />
		<condition property="do.abort">
			<equals arg1="${do.patch}" arg2="n" />
		</condition>
		<fail if="do.abort" message="==> Aborted by user -- revisit with 'ant [options] patchdb'" />
		<sql driver="${db.driver}" url="${db.url}" userid="${db.user}" password="${db.password}" classpathref="javalibs" autocommit="${db.autocommit}">
			<fileset>
				<include name="${patch}" />
			</fileset>
			<fileset dir="${db-specific}">
				<include name="${db.close-session}" />
			</fileset>
		</sql>
		<antcall target="optimize" />
	</target>

	<!-- Run -->

	<target name="dm" description="runs the monolithic DeepaMehta application, default instance">
		<java classname="de.deepamehta.service.DeepaMehta" dir="${client}" fork="true">
			<classpath>
				<pathelement location="${client}/DeepaMehta.jar" />
				<path refid="dmapps" />
				<path refid="javalibs" />
			</classpath>
			<sysproperty key="java.endorsed.dirs" path="${endorsedpath}" />
			<arg value="${dm.instance}" />
		</java>
	</target>

	<target name="dms" description="runs the DeepaMehta server">
		<java classname="de.deepamehta.service.DeepaMehtaServer" dir="${client}" fork="true">
			<classpath>
				<pathelement location="${server}/DeepaMehtaService.jar" />
				<pathelement location="${server}/DeepaMehtaTopics.jar" />
				<path refid="dmapps" />
				<path refid="javalibs" />
			</classpath>
			<sysproperty key="java.endorsed.dirs" path="${endorsedpath}" />
			<arg value="${dm.instance}" />
		</java>
	</target>

	<target name="dmc" description="runs the DeepaMehta client, connects to local server">
		<java classname="de.deepamehta.client.DeepaMehtaClient" dir="${client}" fork="true">
			<classpath>
				<pathelement location="${client}/DeepaMehtaClient.jar" />
			</classpath>
			<arg value="${dm.host}:${dm.port}" />
		</java>
	</target>

	<!-- Fix -->

	<target name="fixdb" description="fixes invalid HTML">
		<java classname="de.deepamehta.service.db.DBFix" dir="${client}" fork="true">
			<classpath>
				<pathelement location="${server}/DeepaMehtaService.jar" />
				<path refid="javalibs" />
			</classpath>
			<arg value="${dm.instance}" />
		</java>
	</target>

</project>
