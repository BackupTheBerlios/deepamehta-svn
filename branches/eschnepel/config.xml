<project>
	<condition property="dm.base-dir" value=".">
		<not>
			<isset property="dm.base-dir" />
		</not>
	</condition>

	<property file="${dm.base-dir}/build.properties" />
	<property file="${dm.instance.property-file}" />
	<property file="${dm.instance.build-property-file}" />

	<path id="javalibs">
		<fileset dir="${dm.base-dir}">
			<include name="${db.libs}" />
		</fileset>
		<pathelement location="${libpath}/servlet.jar" />
		<pathelement location="${libpath}/mail.jar" />
		<pathelement location="${libpath}/activation.jar" />
		<pathelement location="${libpath}/jndi.jar" />
		<pathelement location="${libpath}/batik.jar" />
		<pathelement location="${libpath}/fop.jar" />
		<pathelement location="${libpath}/xml4j.jar" />
		<pathelement location="${libpath}/avalon-framework.jar" />
		<pathelement location="${libpath}/commons-fileupload-1.0.jar" />
		<pathelement location="${libpath}/googleapi.jar" />
		<pathelement location="${libpath}/spring-core.jar" />
		<pathelement location="${libpath}/commons-logging.jar" />
	</path>
	<pathconvert property="jarclasspath" pathsep=" " refid="javalibs">
		<!-- The classpath inside the .JAR archive is always interpreted relative to the location
		     of the archive itself. Thus, if the archive resides in install/client/somename.jar and
		     the libs reside in libs/, the JRE has to look in ../../libs/. The following option
		     takes care of this. -->
		<map from="${libpath}" to="../../libs" />
	</pathconvert>
</project>
